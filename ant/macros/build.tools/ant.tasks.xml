<?xml version="1.0"?>

<project name="tasks.build.tools.xml">

   <!-- property name='debugAnt' value='true'/ -->

   <dirname property="tasks.build.tools.dir" file="${ant.file.tasks.build.tools.xml}"/>

   <macrodef name='debug.echo'>
      <attribute name='message'/>
      <sequential>
         <if>
            <equals arg1='${debugAnt}' arg2='true'/>
            <then>
               <echo message='@{message}'/>
            </then>
         </if>
      </sequential>
   </macrodef>

   <macrodef name="build.projects.from.repo.file">
      <attribute name="repo.file"/>
      <sequential>
         <xmltask source="@{repo.file}">
            <call path="repositories/repos/repository">
               <param name="name" path="@name"/>
               <param name="target" path="@target" default=''/>
               <actions>
                  <if>
                     <not>
                        <equals arg1="@{target}" arg2="DO-NOT-BUILD"/>
                     </not>
                     <then>
                        <echo>Building the [@{name}] sub-project</echo>
                        <stopwatch name='@{name}.projectBuild'/>
                        <if>
                           <equals arg1="@{target}" arg2=''/>
                           <then>
                              <antCallTarget target="@{name}"/>
                              <!-- antcall target="@{name}"/ -->
                           </then>
                           <else>
                              <antCallTarget target="@{target}"/>
                              <!-- antcall target="@{target}"/ -->
                           </else>
                        </if>
                        <stopwatch name='@{name}.projectBuild' action='elapsed'/>
                        <echo>Done building the [@{name}] sub-project</echo>
                        <echo>=======================================</echo>
                     </then>
                  </if>
               </actions>
            </call>
         </xmltask>
      </sequential>
   </macrodef>

   <macrodef name="update.repos.from.repo.file">
      <attribute name="repo.file"/>
      <sequential>
         <delete file='repos.version.info.json'/>
         <echo file='repos.version.info.json' append='false' message = '{${line.separator}   [${line.separator}'/>
         <check.if.executable.exists executable='git'/>
         <xmltask source="@{repo.file}">
            <call path="repositories/shared/common">
               <param name="shared.url"       path="@url"/>
               <param name="shared.ref"       path="@ref"/>
               <param name="shared.clone.dir" path="@cloneDirectory"/>
               <actions>
                  <property name='shared.url'       value='@{shared.url}'/>
                  <property name='shared.ref'       value='@{shared.ref}'/>
                  <property name='shared.clone.dir' value='@{shared.clone.dir}'/>
               </actions>
            </call>
            <call path="repositories/repos/repository">
               <param name='name'           path="@name"/>
               <param name='prefix'         path="@prefix"         default=''/>
               <param name='ref'            path="@ref"            default='${shared.ref}'/>
               <param name="url"            path="@url"            default=''/>
               <param name="cloneDirectory" path="@cloneDirectory" default=''/>
               <actions>
                  <local name='cloneDirectory'/>
                  <if>
                     <equals arg1="@{cloneDirectory}" arg2=''/>
                     <then>
                        <if>
                           <equals arg1="@{prefix}"         arg2=''/>
                           <then>
                              <property name='cloneDirectory' value='${shared.clone.dir}/@{name}' />
                           </then>
                           <else>
                              <property name='cloneDirectory' value='${shared.clone.dir}/@{prefix}/@{name}' />
                           </else>
                        </if>
                     </then>
                     <else>
                        <property name='cloneDirectory' value='@{cloneDirectory}'/>
                     </else>
                  </if>
                  <local name='url'/>
                  <if>
                     <equals arg1="@{url}" arg2=''/>
                     <then>
                        <property name='url' value='${shared.url}/@{name}.git' />
                     </then>
                     <else>
                        <property name='url' value='@{url}/@{name}.git' />
                     </else>
                  </if>
                  <echo>Updating the [@{name}] sub-project on the [@{ref}] branch</echo>
                  <if>
                     <not>
                        <available file="${cloneDirectory}" type="dir"/>
                     </not>
                     <then>
                        <debug.echo message='cloning ${url} to ${cloneDirectory}'/>
                        <exec executable="git" failonerror="true" output="/dev/null" error="gitErrors.log">
                           <arg value="clone"/>
                           <arg value="${url}"/>
                           <arg value="${cloneDirectory}"/>
                        </exec>
                        <debug.echo message='switching ${cloneDirectory} to @{ref}'/>
                        <exec executable="git" dir="${cloneDirectory}" failonerror="true" output="/dev/null" error="gitErrors.log" resultproperty="@{name}.checkout.result">
                           <arg value="checkout"/>
                           <arg value="@{ref}"/>
                        </exec>
                        <debug.echo message='pulling ${cloneDirectory}'/>
                        <exec executable="git" dir="${cloneDirectory}" failonerror="true" output="/dev/null" error="gitErrors.log" resultproperty="@{name}.pull.result">
                           <arg value="pull"/>
                        </exec>
                     </then>
                     <else>
                        <debug.echo message='stashing ${cloneDirectory}'/>
                        <exec executable="git" dir="${cloneDirectory}" failonerror="false" outputproperty='@{name}.stash.out' error="gitErrors.log" resultproperty="@{name}.stash.result">
                           <arg value="stash"/>
                        </exec>
                        <debug.echo message='checking out ${cloneDirectory}'/>
                        <exec executable="git" dir="${cloneDirectory}" failonerror="false" output="/dev/null" error="gitErrors.log" resultproperty="@{name}.fetch.result">
                           <arg value="fetch"/>
                        </exec>
                        <exec executable="git" dir="${cloneDirectory}" failonerror="false" output="/dev/null" error="gitErrors.log" resultproperty="@{name}.checkout.result">
                           <arg value="checkout"/>
                           <arg value="@{ref}"/>
                        </exec>
                        <debug.echo message='pulling ${cloneDirectory}'/>
                        <exec executable="git" dir="${cloneDirectory}" failonerror="false" output="/dev/null" error="gitErrors.log" resultproperty="@{name}.pull.result">
                           <arg value="pull"/>
                        </exec>
                        <if>
                           <not>
                                 <equals arg1='No local changes to save' arg2='${@{name}.stash.out}'/>
                           </not>
                           <then>
                              <debug.echo message='applying stashes ${cloneDirectory}'/>
                              <exec executable="git" dir="${cloneDirectory}"  failonerror="false" resultproperty="@{name}.stash.apply.result">
                                 <arg value="stash"/>
                                 <arg value="pop"/>
                              </exec>
                           </then>
                        </if>
                        <fail message='Git failed to checkout [@{ref}] branch on [@{name}] sub-project. Check if branch exists/spelling'>
                           <condition>
                              <equals arg1='1' arg2='${@{name}.checkout.result}'/>
                           </condition>
                        </fail>
                     </else>
                  </if>
                  <echo file='repos.version.info.json' append='true'>
      {
         &apos;name&apos;: &apos;@{name}&apos;,
         &apos;url&apos;: &apos;${url}&apos;,
         &apos;dir&apos;: &apos;${cloneDirectory}&apos;,
         &apos;ref&apos;: &apos;@{ref}&apos;
      },
                  </echo>
                  <echo>Updated directory [${cloneDirectory}]</echo>
                  <echo>Done updating the [@{name}] sub-project</echo>
                  <echo>-------------------------------------------------------------</echo>
               </actions>
            </call>
         </xmltask>
         <echo file='repos.version.info.json' append='true' message = '{}${line.separator}   ]${line.separator}}'/>
      </sequential>
   </macrodef>

   <macrodef name="git.status.from.repo.file">
      <attribute name="repo.file"/>
      <sequential>
         <check.if.executable.exists executable='git'/>
         <xmltask source="@{repo.file}">
            <call path="repositories/shared/common">
               <param name="shared.clone.dir" path="@cloneDirectory"/>
               <actions>
                  <property name='shared.clone.dir' value='@{shared.clone.dir}'/>
               </actions>
            </call>
            <call path="repositories/repos/repository">
               <param name='name'           path="@name"/>
               <param name='prefix'         path="@prefix"         default=''/>
               <param name="cloneDirectory" path="@cloneDirectory" default=''/>
               <actions>
                  <local name='cloneDirectory'/>
                  <if>
                     <equals arg1="@{cloneDirectory}" arg2=''/>
                     <then>
                        <if>
                           <equals arg1="@{prefix}"         arg2=''/>
                           <then>
                              <property name='cloneDirectory' value='${shared.clone.dir}/@{name}' />
                           </then>
                           <else>
                              <property name='cloneDirectory' value='${shared.clone.dir}/@{prefix}/@{name}' />
                           </else>
                        </if>
                     </then>
                     <else>
                        <property name='cloneDirectory' value='@{cloneDirectory}'/>
                     </else>
                  </if>
                  <echo> -------------------------------------------------------------- </echo>
                  <echo>updating status [${cloneDirectory}]</echo>
                  <if>
                     <available file="${cloneDirectory}" type="dir"/>
                     <then>
                        <exec executable="git" dir='${cloneDirectory}' failonerror="true">
                           <arg value="status"/>
                        </exec>
                     </then>
                  </if>
               </actions>
            </call>
         </xmltask>
      </sequential>
   </macrodef>

   <macrodef name="git.fetch.from.repo.file">
      <attribute name="repo.file"/>
      <sequential>
         <check.if.executable.exists executable='git'/>
         <xmltask source="@{repo.file}">
            <call path="repositories/shared/common">
               <param name="shared.url"       path="@url"/>
               <param name="shared.ref"       path="@ref"/>
               <param name="shared.clone.dir" path="@cloneDirectory"/>
               <actions>
                  <property name='shared.url'       value='@{shared.url}'/>
                  <property name='shared.ref'       value='@{shared.ref}'/>
                  <property name='shared.clone.dir' value='@{shared.clone.dir}'/>
               </actions>
            </call>
            <call path="repositories/repos/repository">
               <param name='name'           path="@name"/>
               <param name='prefix'         path="@prefix"         default=''/>
               <param name='ref'            path="@ref"            default='${shared.ref}'/>
               <param name="url"            path="@url"            default=''/>
               <param name="cloneDirectory" path="@cloneDirectory" default=''/>
               <actions>
                  <local name='cloneDirectory'/>
                  <if>
                     <equals arg1="@{cloneDirectory}" arg2=''/>
                     <then>
                        <if>
                           <equals arg1="@{prefix}"         arg2=''/>
                           <then>
                              <property name='cloneDirectory' value='${shared.clone.dir}/@{name}' />
                           </then>
                           <else>
                              <property name='cloneDirectory' value='${shared.clone.dir}/@{prefix}/@{name}' />
                           </else>
                        </if>
                     </then>
                     <else>
                        <property name='cloneDirectory' value='@{cloneDirectory}'/>
                     </else>
                  </if>
                  <local name='url'/>
                  <if>
                     <equals arg1="@{url}" arg2=''/>
                     <then>
                        <property name='url' value='${shared.url}/@{name}.git' />
                     </then>
                     <else>
                        <property name='url' value='@{url}/@{name}.git' />
                     </else>
                  </if>
                  <echo>fetching [${url}] to [${cloneDirectory}]</echo>
                  <if>
                     <available file="${cloneDirectory}" type="dir"/>
                     <then>
                        <exec executable="git" dir='${cloneDirectory}' failonerror="true" output="/dev/null" error="gitErrors.log">
                           <arg value="fetch"/>
                        </exec>
                     </then>
                  </if>
               </actions>
            </call>
         </xmltask>
      </sequential>
   </macrodef>

</project>
