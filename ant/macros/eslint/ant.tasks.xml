<?xml version="1.0"?>

<!--
   # need to upgrade to node.js 12.18.4 and npm 6.14.6
   npm cache clean -f
   npm install -g n
   n 12.18.4
   npm install -g npm@6.14.6
   node -v
   # v12.18.4
   npm -v
   # 6.14.8
-->

<project name="tasks.esLint.xml">

   <dirname property="tasks.esLint.dir"    file="${ant.file.tasks.esLint.xml}"/>
   <property name = "tasks.eslint.checkstyle.xsl" value = "${tasks.esLint.dir}/ESLintProcessCheckstyleLog.xsl"/>


   <macrodef name='installEslintToolsLocally'>
      <sequential>
         <installOneEslintToolLocally tool.name='eslint'                           tool.version='@7.10.0'/>
         <installOneEslintToolLocally tool.name='babel-eslint'                     tool.version='@10.1.0'/>
         <installOneEslintToolLocally tool.name='eslint-plugin-react'              tool.version='@7.21.2'/>
         <installOneEslintToolLocally tool.name='typescript'                       tool.version='@3.7.2'/>
         <installOneEslintToolLocally tool.name='@typescript-eslint/parser'        tool.version='@2.4.0'/>
         <installOneEslintToolLocally tool.name='@typescript-eslint/eslint-plugin' tool.version='@2.4.0'/>
      </sequential>
   </macrodef>

   <macrodef name='verify.eslint.tools'>
      <sequential>
         <if>
            <and>
               <not>
                  <contains string='${ant.project.invoked-targets}' substring='clean' casesensitive='false'/>
               </not>
               <not>
                  <contains string='${ant.project.invoked-targets}' substring='git.update' casesensitive='false'/>
               </not>
            </and>
            <then>
               <installEslintToolsLocally/>
            </then>
         </if>
         <verify.es.lint.exists/>
         <verify.es.lint.component tool.name='eslint'                           tool.version='7.10.0'/>
         <verify.es.lint.component tool.name='babel-eslint'                     tool.version='10.1.0'/>
         <verify.es.lint.component tool.name='eslint-plugin-react'              tool.version='7.21.2'/>
         <verify.es.lint.component tool.name='typescript'                       tool.version='3.7.2'/>
         <verify.es.lint.component tool.name='@typescript-eslint/parser'        tool.version='2.4.0'/>
         <verify.es.lint.component tool.name='@typescript-eslint/eslint-plugin' tool.version='2.4.0'/>
            <!-- else>
                                <echo message="not verifying eslint tools - cleaning"/>
            </else -->
      </sequential>
   </macrodef>

   <macrodef name='installOneEslintToolLocally'>
      <attribute name="tool.name"/>
      <attribute name="tool.version"/>
      <sequential>
         <if>
            <not>
               <available file='${tasks.esLint.dir}/node_modules/@{tool.name}'/>
            </not>
            <then>
               <echo message='installing local instance of @{tool.name} version @{tool.version}'/>
               <exec executable="cmd" dir='${tasks.esLint.dir}' failonerror="true" osfamily="windows">
                  <arg value="/c"/>
                  <arg value="npm install @{tool.name}@{tool.version}"/>
               </exec>
               <exec executable="npm" dir='${tasks.esLint.dir}' failonerror="true" osfamily="unix">
                  <arg value="install"/>
                  <arg value="@{tool.name}@{tool.version}"/>
               </exec>
            </then>
         </if>
      </sequential>
   </macrodef>

   <macrodef name='verify.es.lint.component'>
      <attribute name='tool.name'/>
      <attribute name='tool.version'/>
      <sequential>
         <local name='actual.tool.version'/>
         <exec executable="cmd" outputproperty='actual.tool.version' failonerror="true" osfamily="windows">
            <arg value="/c"/>
            <arg value="jq"/>
            <arg value="-r"/>
            <arg value=".version"/>
            <arg value="${tasks.esLint.dir}/node_modules/@{tool.name}/package.json"/>
         </exec>
         <exec executable="jq" outputproperty='actual.tool.version' failonerror="true" osfamily="unix">
            <arg value="-r"/>
            <arg value=".version"/>
            <arg value="${tasks.esLint.dir}/node_modules/@{tool.name}/package.json"/>
         </exec>
         <fail message="Found @{tool.name} version ${actual.tool.version} but expected @{tool.version}">
            <condition>
               <not>
                  <equals arg1="${actual.tool.version}" arg2="@{tool.version}"/>
               </not>
            </condition>
         </fail>
      </sequential>
   </macrodef>

   <macrodef name='verify.es.lint.exists'>
      <sequential>
         <fail>
            <condition>
               <not>
                  <available file='${tasks.esLint.dir}/node_modules/.bin/eslint'/>
               </not>
            </condition>
         </fail>
      </sequential>
   </macrodef>

   <macrodef name="eslint">
      <attribute name="src.dir"/>
      <attribute name="project.name"     default='${ant.project.name}'/>
      <attribute name="test"             default='main'/>
      <attribute name="failonerror"      default='false'/>
      <attribute name="out.dir"          default='${tmp.dir}'/>
      <attribute name="style"            default='checkstyle'/>
      <attribute name='sourceType'       default='node'/>
      <attribute name='ignore.pattern'   default=' '/>
      <attribute name='file.extension'   default='.js'/>
      <attribute name='tasks.esLint.dir' default='${tasks.esLint.dir}'/>
      <attribute name='tasks.eslint.checkstyle.xsl' default='${tasks.eslint.checkstyle.xsl}'/>
      <attribute name='allowed.checkstyle.violations.file' default='${basedir}/product.settings/allowed.checkstyle.violations.properties'/>
      <attribute name='global.allowed.checkstyle.violations.file' default='${global.allowed.checkstyle.violations.file}'/>
      <sequential>
         <local name="eslintRcFile"/>
         <property name="eslintRcFile" value='@{tasks.esLint.dir}/eslintrc.@{sourceType}.js'/>

         <local name="out.dir"/>
         <property name="out.dir" value="@{out.dir}/analysis/@{test}/@{sourceType}/ESLintCheckstyle"/>

         <local name="esLintUptodate"/>
         <uptodate property="esLintUptodate" targetfile="${out.dir}/ESLint_success.@{sourceType}.xml">
            <srcfiles dir="@{src.dir}" includes="**/*@{file.extension}"/>
         </uptodate>
         <if>
            <not>
               <isset property="esLintUptodate"/>
            </not>
            <then>
               <fail>
                  <condition>
                     <not>
                        <available file='${tasks.esLint.dir}/node_modules/.bin/eslint'/>
                     </not>
                  </condition>
               </fail>
               <mkdir dir="${out.dir}"/>
               <echo message='scanning files in @{src.dir} using rules file: ${eslintRcFile}'/>
               <exec executable="cmd" osfamily="windows" failonerror="false">
                  <arg value="/c"/>
                  <arg value="${tasks.esLint.dir}/node_modules/.bin/eslint"/>
                  <arg value="-c"/>
                  <arg value="${eslintRcFile}"/>
                  <arg value="-f"/>
                  <arg value="@{style}"/>
                  <arg value="--no-inline-config"/>
                  <arg value="--ext"/>
                  <arg value="@{file.extension}"/>
                  <arg value="-o"/>
                  <arg value="${out.dir}/ESLint_checkstyle_messages.xml"/>
                  <arg value="--ignore-pattern"/>
                  <arg value="@{ignore.pattern}"/>
                  <arg value="@{src.dir}"/>
               </exec>
               <exec executable="${tasks.esLint.dir}/node_modules/.bin/eslint" failonerror="false" osfamily="unix">
                  <arg value="-c"/>
                  <arg value="${eslintRcFile}"/>
                  <arg value="-f"/>
                  <arg value="@{style}"/>
                  <arg value="--no-inline-config"/>
                  <arg value="--ext"/>
                  <arg value="@{file.extension}"/>
                  <arg value="-o"/>
                  <arg value="${out.dir}/ESLint_checkstyle_messages.xml"/>
                  <arg value="--ignore-pattern"/>
                  <arg value="@{ignore.pattern}"/>
                  <arg value="@{src.dir}"/>
               </exec>
            </then>
         </if>
         <var unset="true" name="esLintUptodate"/>

         <xslt in="${out.dir}/ESLint_checkstyle_messages.xml" style="@{tasks.eslint.checkstyle.xsl}" out="${out.dir}/ESLint_checkstyle_summary.txt">
            <param name='projectName' expression="@{project.name}"/>
            <param name='precision' expression="summary"/>
         </xslt>

         <xslt in="${out.dir}/ESLint_checkstyle_messages.xml" style="@{tasks.eslint.checkstyle.xsl}" out="${out.dir}/ESLint_checkstyle_terse_summary.txt">
            <param name='projectName' expression="@{project.name}"/>
            <param name='precision' expression="terse"/>
         </xslt>

         <xslt in="${out.dir}/ESLint_checkstyle_messages.xml" style="@{tasks.eslint.checkstyle.xsl}" out="${out.dir}/ESLint_checkstyle_type_summary.txt">
            <param name='projectName' expression="@{project.name}"/>
            <param name='precision' expression="detail"/>
         </xslt>

         <xslt in="${out.dir}/ESLint_checkstyle_messages.xml" style="@{tasks.eslint.checkstyle.xsl}" out="${out.dir}/ESLint_checkstyle_counts.properties">
            <param name='projectName' expression="@{project.name}"/>
            <param name='precision' expression="counts"/>
         </xslt>

         <local name="csLen"/>
         <length property="csLen" file="${out.dir}/ESLint_checkstyle_summary.txt"/>
         <if>
            <not>
               <equals arg1='${csLen}' arg2='0'/>
            </not>
            <then>
               <concat>
                  <fileset dir="${out.dir}" includes="ESLint_checkstyle_summary.txt"/>
               </concat>
            </then>
         </if>

         <if>
            <available file='@{global.allowed.checkstyle.violations.file}'/>
            <then>
               <echo message='loading acceptable limits from @{global.allowed.checkstyle.violations.file}'/>
               <property file='@{global.allowed.checkstyle.violations.file}'/>
            </then>
            <else>
               <echo message='could not find acceptable limits file @{global.allowed.checkstyle.violations.file}'/>
            </else>
         </if>
         <if>
            <available file='@{allowed.checkstyle.violations.file}'/>
            <then>
               <echo message='loading acceptable limits from @{allowed.checkstyle.violations.file}'/>
               <property file='@{allowed.checkstyle.violations.file}'/>
            </then>
            <else>
               <echo message='could not find acceptable limits file @{allowed.checkstyle.violations.file}'/>
            </else>
         </if>
         <if>
            <available file='${out.dir}/ESLint_checkstyle_counts.properties'/>
            <then>
               <compare.checkstyle.results project.name="@{project.name}" actual="${out.dir}/ESLint_checkstyle_counts.properties"/>
            </then>
         </if>
         <touch file="${out.dir}/ESLint_success.@{sourceType}.xml"/>
      </sequential>
   </macrodef>

   <verify.eslint.tools/>

</project>
